import pandas as pd
import matplotlib.pyplot as plt
import mpld3
import sys

# Замените 'path_to_file.csv' на путь к вашему CSV файлу и при необходимости укажите правильный разделитель в sep

# Чтение переданной переменной из аргументов командной строки
if len(sys.argv) > 1:  # Проверяем, что был передан хотя бы один аргумент
    received_variable_type = sys.argv[1]
    received_variable_region = sys.argv[2]
    received_variable_link = sys.argv[3]


match received_variable_type:
        case "VRP":
           csv_file = 'tables/VRP.csv'
        case "innovation":
           csv_file = 'tables/innovation.csv'
        case "iznos":
           csv_file = 'tables/iznos.csv'
        case "RabSila":
           csv_file = 'tables/RabSila.csv'
        case "Trud":
           csv_file = 'tables/Trud.csv'
        case "VredProizv":
           csv_file = 'tables/VredProizv.csv'
        case "ZP":
           csv_file = 'tables/ZP.csv'
        case "Bezrabotica":
           csv_file = 'tables/Bezrabotica.csv'
print(received_variable_type, '\n')
print(csv_file)
try:
    df = pd.read_csv(csv_file, index_col=0, sep=';')  # Укажите здесь нужный разделитель, если он отличается
except Exception as e:
    print(f"Произошла ошибка при чтении файла: {e}")
    exit()

# Функция для построения графика
def plot_region_data(region):
    if region in df.index:
        data = df.loc[region]
        data = data.to_dict()
        values = [float(value.replace(" ", "").replace(",", ".")) if isinstance(value, str) else value for value in data.values()]
        years = list(data.keys())
        plt.figure(figsize=(10, 6))
        # Построение графика: года по оси X, значения по оси Y
        plt.plot(years, values, '-ro')  # '-ro' означает красные точки, соединённые линией
        plt.xlabel('Год')
        plt.ylabel('Значение')
        plt.title(f'Данные {csv_file} по региону: {region} ')

        plt.xticks(years, rotation=45)  # Важно чтобы года подписывались корректно; rotation для избежания наслоения
        plt.tick_params(labelsize=8)  # Мелкие корректировки размера текста для надписей осей

        plt.grid(True)
        plt.tight_layout()  # Автоматическая корректировка подписей, чтобы они не перекрывали друг другa

        # Для центрирования графика
        ax = plt.gca()  # Получаем текущие оси
        ax.set_position([0.1, 0.1, 0.8, 0.8])
          # Автоматическая корректировка, чтобы метки не перекрывали друг другa
        # Конвертируем график в HTML
        return mpld3.fig_to_html(plt.gcf())
    else:
        return "<b>Указанный регион не найден в файле данных.</b>"

# Пример региона
region_name = received_variable_region
print(df)
print(df.loc[region_name])
data = df.loc[region_name]
data = data.to_dict()
print(data)
html_content = plot_region_data(region_name)

# Сохраняем результат в HTML файл
html_file = 'templates/grafic.html'
with open(html_file, 'w', encoding='UTF-8') as f:
    f.write(html_content)
    f.write('</br>')
    f.write('<text>\
    Значения по годам:</text> <br/>')
    f.write(f'<text>\
    {data}:</text></br>')
    f.write('</br>')
    f.write(f'<a href="{received_variable_link}"> \
            <div class="knopka"> \
          <svg width="7vw" height="5vh" viewBox="0 0 78 79" fill="none" xmlns="http://www.w3.org/2000/svg">\
            <g filter="url(#filter0_bd_248_1933)">\
            <mask id="path-1-inside-1_248_1933" fill="white">\
            <path d="M35.2603 6.13593L14.724 11.6386C7.24023 13.6439 4.13613 19.0198 6.1412 26.5028L11.6381 47.0177C13.6432 54.5007 19.0194 57.6043 26.5031 55.599L47.0394 50.0963C54.5232 48.0911 57.6077 42.7204 55.6026 35.2374L50.1057 14.7225C48.1006 7.2395 42.744 4.13067 35.2603 6.13593Z"/>\
            <path d="M13.7087 20.666C12.4467 22.4767 12.0386 24.5877 12.5588 26.5291L16.3912 40.8315C17.4777 44.8866 22.2279 47.1191 27.0103 45.8377L40.5517 42.2093C45.334 40.9278 48.3277 36.6049 47.245 32.5642L43.4127 18.2619C42.33 14.2212 37.5755 11.9728 32.7932 13.2542L19.2518 16.8826C16.9549 17.4981 14.9668 18.8547 13.7087 20.666Z"/>\
            <path d="M16.8424 29.7986L17.0232 51.0566C17.0891 58.8033 21.5156 63.1552 29.2623 63.0893L50.5001 62.9087C58.2468 62.8428 62.5986 58.4163 62.5327 50.6696L62.352 29.4116C62.2861 21.6649 57.8598 17.3333 50.113 17.3992L28.8753 17.5798C21.1285 17.6457 16.7766 22.0519 16.8424 29.7986Z"/>\
            <path d="M48.9882 41.8718L34.5389 41.9947L40.2297 47.5443C40.8954 48.2214 40.9045 49.2908 40.2504 49.9791C39.5961 50.6446 38.5039 50.6539 37.8384 49.9996L29.1873 41.5395C28.5447 40.9078 28.5351 39.7701 29.1668 39.1275L37.6727 30.5215C38.327 29.856 39.4192 29.8467 40.0847 30.501C40.4062 30.8396 40.5919 31.2727 40.5956 31.7028C40.5993 32.1351 40.4211 32.5917 40.1053 32.913L34.5099 38.5814L48.9591 38.4586C49.9148 38.4504 50.6721 39.195 50.6803 40.1507C50.6882 41.0836 49.9439 41.8636 48.9882 41.8718Z"/>\
            </mask>\
            <path d="M35.2603 6.13593L14.724 11.6386C7.24023 13.6439 4.13613 19.0198 6.1412 26.5028L11.6381 47.0177C13.6432 54.5007 19.0194 57.6043 26.5031 55.599L47.0394 50.0963C54.5232 48.0911 57.6077 42.7204 55.6026 35.2374L50.1057 14.7225C48.1006 7.2395 42.744 4.13067 35.2603 6.13593Z" fill="url(#paint0_linear_248_1933)"/>\
            <path d="M13.7087 20.666C12.4467 22.4767 12.0386 24.5877 12.5588 26.5291L16.3912 40.8315C17.4777 44.8866 22.2279 47.1191 27.0103 45.8377L40.5517 42.2093C45.334 40.9278 48.3277 36.6049 47.245 32.5642L43.4127 18.2619C42.33 14.2212 37.5755 11.9728 32.7932 13.2542L19.2518 16.8826C16.9549 17.4981 14.9668 18.8547 13.7087 20.666Z" fill="#EF5641" fill-opacity="0.5"/>\
            <path d="M16.8424 29.7986L17.0232 51.0566C17.0891 58.8033 21.5156 63.1552 29.2623 63.0893L50.5001 62.9087C58.2468 62.8428 62.5986 58.4163 62.5327 50.6696L62.352 29.4116C62.2861 21.6649 57.8598 17.3333 50.113 17.3992L28.8753 17.5798C21.1285 17.6457 16.7766 22.0519 16.8424 29.7986Z" fill="#FFAC95" fill-opacity="0.4"/>\
            <path d="M48.9882 41.8718L34.5389 41.9947L40.2297 47.5443C40.8954 48.2214 40.9045 49.2908 40.2504 49.9791C39.5961 50.6446 38.5039 50.6539 37.8384 49.9996L29.1873 41.5395C28.5447 40.9078 28.5351 39.7701 29.1668 39.1275L37.6727 30.5215C38.327 29.856 39.4192 29.8467 40.0847 30.501C40.4062 30.8396 40.5919 31.2727 40.5956 31.7028C40.5993 32.1351 40.4211 32.5917 40.1053 32.913L34.5099 38.5814L48.9591 38.4586C49.9148 38.4504 50.6721 39.195 50.6803 40.1507C50.6882 41.0836 49.9439 41.8636 48.9882 41.8718Z" fill="url(#paint1_linear_248_1933)"/>\
            <path d="M35.2603 6.13593L35.2085 5.94274L35.2603 6.13593ZM14.724 11.6386L14.7757 11.8318L14.724 11.6386ZM6.1412 26.5028L6.33439 26.451L6.1412 26.5028ZM11.6381 47.0177L11.445 47.0694L11.6381 47.0177ZM26.5031 55.599L26.5549 55.7922L26.5549 55.7922L26.5031 55.599ZM47.0394 50.0963L46.9877 49.9032L46.9877 49.9032L47.0394 50.0963ZM55.6026 35.2374L55.7958 35.1856L55.7958 35.1856L55.6026 35.2374ZM50.1057 14.7225L49.9125 14.7743L49.9125 14.7743L50.1057 14.7225ZM13.7087 20.666L13.8727 20.7803L13.8729 20.7801L13.7087 20.666ZM12.5588 26.5291L12.3657 26.5809L12.5588 26.5291ZM16.3912 40.8315L16.5843 40.7797L16.5843 40.7797L16.3912 40.8315ZM27.0103 45.8377L26.9585 45.6445L27.0103 45.8377ZM40.5517 42.2093L40.6034 42.4025L40.5517 42.2093ZM47.245 32.5642L47.0518 32.616L47.0518 32.616L47.245 32.5642ZM43.4127 18.2619L43.6059 18.2101L43.6059 18.2101L43.4127 18.2619ZM32.7932 13.2542L32.845 13.4474L32.7932 13.2542ZM19.2518 16.8826L19.2 16.6894L19.2 16.6894L19.2518 16.8826ZM16.8424 29.7986L17.0424 29.7969L17.0424 29.7969L16.8424 29.7986ZM17.0232 51.0566L16.8232 51.0583L16.8232 51.0583L17.0232 51.0566ZM29.2623 63.0893L29.264 63.2893L29.264 63.2893L29.2623 63.0893ZM50.5001 62.9087L50.4984 62.7087L50.4984 62.7087L50.5001 62.9087ZM62.5327 50.6696L62.3327 50.6713L62.3327 50.6713L62.5327 50.6696ZM62.352 29.4116L62.5519 29.4099L62.5519 29.4099L62.352 29.4116ZM50.113 17.3992L50.1147 17.5991L50.1147 17.5991L50.113 17.3992ZM28.8753 17.5798L28.8736 17.3798L28.8736 17.3798L28.8753 17.5798ZM48.9882 41.8718L48.9865 41.6718L48.9865 41.6718L48.9882 41.8718ZM34.5389 41.9947L34.5372 41.7947L34.0516 41.7988L34.3993 42.1378L34.5389 41.9947ZM40.2297 47.5443L40.3723 47.4041L40.3693 47.4011L40.2297 47.5443ZM40.2504 49.9791L40.393 50.1193L40.3954 50.1169L40.2504 49.9791ZM37.8384 49.9996L37.9786 49.857L37.9782 49.8566L37.8384 49.9996ZM29.1873 41.5395L29.0471 41.6821L29.0474 41.6825L29.1873 41.5395ZM29.1668 39.1275L29.0245 38.9869L29.0242 38.9873L29.1668 39.1275ZM37.6727 30.5215L37.815 30.6621L37.8154 30.6617L37.6727 30.5215ZM40.0847 30.501L40.2299 30.3632L40.225 30.3584L40.0847 30.501ZM40.5956 31.7028L40.7956 31.7011L40.5956 31.7028ZM40.1053 32.913L40.2476 33.0535L40.2479 33.0532L40.1053 32.913ZM34.5099 38.5814L34.3675 38.4409L34.0274 38.7856L34.5116 38.7814L34.5099 38.5814ZM48.9591 38.4586L48.9574 38.2586L48.9574 38.2586L48.9591 38.4586ZM50.6803 40.1507L50.4803 40.1524L50.6803 40.1507ZM35.2085 5.94274L14.6722 11.4454L14.7757 11.8318L35.312 6.32911L35.2085 5.94274ZM14.6722 11.4454C10.8944 12.4577 8.19546 14.3285 6.70108 16.9165C5.2067 19.5046 4.93586 22.7771 5.94802 26.5546L6.33439 26.451C5.34148 22.7454 5.62015 19.5885 7.04748 17.1165C8.47482 14.6446 11.0698 12.8248 14.7757 11.8318L14.6722 11.4454ZM5.94802 26.5546L11.445 47.0694L11.8313 46.9659L6.33439 26.451L5.94802 26.5546ZM11.445 47.0694C12.4571 50.8469 14.3279 53.5455 16.9161 55.0397C19.5043 56.5338 22.7771 56.8045 26.5549 55.7922L26.4514 55.4058C22.7454 56.3988 19.5882 56.1203 17.1161 54.6932C14.644 53.2661 12.8242 50.6715 11.8313 46.9659L11.445 47.0694ZM26.5549 55.7922L47.0912 50.2895L46.9877 49.9032L26.4514 55.4058L26.5549 55.7922ZM47.0912 50.2895C50.869 49.2773 53.5632 47.4077 55.0527 44.8208C56.5421 42.234 56.8079 38.9628 55.7958 35.1856L55.4095 35.2892C56.4024 38.995 56.1285 42.1507 54.706 44.6212C53.2836 47.0917 50.6936 48.9101 46.9877 49.9032L47.0912 50.2895ZM55.7958 35.1856L50.2989 14.6708L49.9125 14.7743L55.4095 35.2892L55.7958 35.1856ZM50.2989 14.6708C49.2868 10.8936 47.421 8.19357 44.8377 6.69803C42.2543 5.20245 38.9863 4.93049 35.2085 5.94274L35.312 6.32911C39.018 5.33611 42.1702 5.61594 44.6373 7.04421C47.1045 8.47253 48.9195 11.0685 49.9125 14.7743L50.2989 14.6708ZM13.5446 20.5516C12.2522 22.4059 11.8287 24.5771 12.3657 26.5809L12.752 26.4774C12.2485 24.5983 12.6411 22.5474 13.8727 20.7803L13.5446 20.5516ZM12.3657 26.5809L16.198 40.8832L16.5843 40.7797L12.752 26.4774L12.3657 26.5809ZM16.198 40.8832C17.3209 45.0742 22.2046 47.3324 27.062 46.0309L26.9585 45.6445C22.2512 46.9058 17.6345 44.6991 16.5843 40.7797L16.198 40.8832ZM27.062 46.0309L40.6034 42.4025L40.4999 42.0161L26.9585 45.6445L27.062 46.0309ZM40.6034 42.4025C45.4611 41.1008 48.5572 36.6887 47.4382 32.5124L47.0518 32.616C48.0982 36.5211 45.2069 40.7548 40.4999 42.0161L40.6034 42.4025ZM47.4382 32.5124L43.6059 18.2101L43.2195 18.3136L47.0518 32.616L47.4382 32.5124ZM43.6059 18.2101C42.4869 14.0339 37.5992 11.7594 32.7414 13.061L32.845 13.4474C37.5519 12.1862 42.1731 14.4085 43.2195 18.3136L43.6059 18.2101ZM32.7414 13.061L19.2 16.6894L19.3035 17.0758L32.845 13.4474L32.7414 13.061ZM19.2 16.6894C16.8613 17.3161 14.8317 18.6986 13.5444 20.5519L13.8729 20.7801C15.1019 19.0108 17.0484 17.6801 19.3035 17.0758L19.2 16.6894ZM16.6424 29.8003L16.8232 51.0583L17.2232 51.0549L17.0424 29.7969L16.6424 29.8003ZM16.8232 51.0583C16.8565 54.9689 17.9912 58.0502 20.1222 60.1453C22.2532 62.2404 25.3535 63.3225 29.264 63.2893L29.2606 62.8893C25.4244 62.9219 22.4381 61.8611 20.4027 59.8601C18.3673 57.859 17.2558 54.8911 17.2232 51.0549L16.8232 51.0583ZM29.264 63.2893L50.5018 63.1086L50.4984 62.7087L29.2606 62.8893L29.264 63.2893ZM50.5018 63.1086C54.4123 63.0754 57.4937 61.9406 59.5888 59.8096C61.6838 57.6786 62.766 54.5784 62.7327 50.6679L62.3327 50.6713C62.3654 54.5075 61.3046 57.4938 59.3035 59.5292C57.3025 61.5646 54.3346 62.676 50.4984 62.7087L50.5018 63.1086ZM62.7327 50.6679L62.5519 29.4099L62.152 29.4133L62.3327 50.6713L62.7327 50.6679ZM62.5519 29.4099C62.5187 25.4993 61.384 22.4229 59.2529 20.3328C57.1218 18.2429 54.0216 17.1659 50.1113 17.1992L50.1147 17.5991C53.9512 17.5665 56.9375 18.6224 58.9728 20.6184C61.008 22.6144 62.1193 25.5771 62.152 29.4133L62.5519 29.4099ZM50.1113 17.1992L28.8736 17.3798L28.877 17.7798L50.1147 17.5991L50.1113 17.1992ZM28.8736 17.3798C24.9633 17.413 21.8819 18.5426 19.7867 20.6685C17.6914 22.7945 16.6092 25.8898 16.6424 29.8003L17.0424 29.7969C17.0098 25.9608 18.0706 22.9796 20.0716 20.9493C22.0726 18.9189 25.0405 17.8124 28.877 17.7798L28.8736 17.3798ZM48.9865 41.6718L34.5372 41.7947L34.5406 42.1946L48.9899 42.0718L48.9865 41.6718ZM34.3993 42.1378L40.0901 47.6875L40.3693 47.4011L34.6785 41.8515L34.3993 42.1378ZM40.0871 47.6846C40.6772 48.2847 40.6852 49.2312 40.1054 49.8413L40.3954 50.1169C41.1237 49.3505 41.1136 48.158 40.3723 47.4041L40.0871 47.6846ZM40.1078 49.8389C39.5309 50.4256 38.5653 50.4338 37.9786 49.857L37.6982 50.1422C38.4424 50.8739 39.6613 50.8636 40.393 50.1193L40.1078 49.8389ZM37.9782 49.8566L29.3271 41.3965L29.0474 41.6825L37.6986 50.1426L37.9782 49.8566ZM29.3275 41.3969C28.7637 40.8426 28.7551 39.8315 29.3094 39.2677L29.0242 38.9873C28.315 39.7086 28.3258 40.973 29.0471 41.6821L29.3275 41.3969ZM29.309 39.2681L37.815 30.6621L37.5305 30.3809L29.0245 38.9869L29.309 39.2681ZM37.8154 30.6617C38.3922 30.075 39.3578 30.0668 39.9445 30.6436L40.225 30.3584C39.4807 29.6267 38.2618 29.6371 37.5301 30.3813L37.8154 30.6617ZM39.9397 30.6387C40.2301 30.9446 40.3924 31.3303 40.3956 31.7045L40.7956 31.7011C40.7915 31.2151 40.5823 30.7347 40.2298 30.3633L39.9397 30.6387ZM40.3956 31.7045C40.3988 32.0846 40.2407 32.4899 39.9626 32.7728L40.2479 33.0532C40.6015 32.6936 40.7997 32.1856 40.7956 31.7011L40.3956 31.7045ZM39.9629 32.7725L34.3675 38.4409L34.6522 38.7219L40.2476 33.0535L39.9629 32.7725ZM34.5116 38.7814L48.9608 38.6585L48.9574 38.2586L34.5082 38.3815L34.5116 38.7814ZM48.9608 38.6585C49.8061 38.6514 50.4731 39.3071 50.4803 40.1524L50.8803 40.1489C50.8712 39.0828 50.0236 38.2495 48.9574 38.2586L48.9608 38.6585ZM50.4803 40.1524C50.4873 40.9766 49.83 41.6646 48.9865 41.6718L48.9899 42.0718C50.0578 42.0627 50.8891 41.1906 50.8803 40.1489L50.4803 40.1524Z" fill="url(#paint2_linear_248_1933)" fill-opacity="0.5" mask="url(#path-1-inside-1_248_1933)"/>\
            </g>\
            <defs>\
            <filter id="filter0_bd_248_1933" x="-9.45459" y="-9.45947" width="86.988" height="87.5493" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\
            <feFlood flood-opacity="0" result="BackgroundImageFix"/>\
            <feGaussianBlur in="BackgroundImageFix" stdDeviation="7.5"/>\
            <feComposite in2="SourceAlpha" operator="in" result="effect1_backgroundBlur_248_1933"/>\
            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\
            <feOffset dx="5" dy="5"/>\
            <feGaussianBlur stdDeviation="5"/>\
            <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 0.447059 0 0 0 0 0.368627 0 0 0 0.5 0"/>\
            <feBlend mode="normal" in2="effect1_backgroundBlur_248_1933" result="effect2_dropShadow_248_1933"/>\
            <feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow_248_1933" result="shape"/>\
            </filter>\
            <linearGradient id="paint0_linear_248_1933" x1="38.2349" y1="38.169" x2="-12.0265" y2="62.3688" gradientUnits="userSpaceOnUse">\
            <stop stop-color="#FFA78F"/>\
            <stop offset="1" stop-color="#F23E2C"/>\
            </linearGradient>\
            <linearGradient id="paint1_linear_248_1933" x1="32.5938" y1="31.5213" x2="33.48" y2="54.3179" gradientUnits="userSpaceOnUse">\
            <stop stop-color="white"/>\
            <stop offset="1" stop-color="white" stop-opacity="0.2"/>\
            </linearGradient>\
            <linearGradient id="paint2_linear_248_1933" x1="40.075" y1="30.8834" x2="41.0164" y2="50.7808" gradientUnits="userSpaceOnUse">\
            <stop stop-color="white"/>\
            <stop offset="1" stop-color="white" stop-opacity="0"/>\
            </linearGradient>\
            </defs>\
            </svg>\
            \
        </div></a>')


print(f"График сохранен в файл: {html_file}")